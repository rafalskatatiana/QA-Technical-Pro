// Операнд number це строка. Виконується Конкатенація.Потім наступний шаг 'number3' + 3, знову один з орперандів строка, також виконується  Конкатенація
1.'number' + 3 + 3
Результат : number33

// Виконується додавання, а так як null приводиться до 0, тоді 0+3=3
2.null + 3
Результат : 3

//5 істинне значення так як воно більше 0, "qwerty" також істенне значення, так як строка не пуста.Тому в циклі, якщо ми дійши до кінця, повертається  останнє обчилене значення
3.5 && "qwerty"
Результат: qwerty

// Унарний плюс приводить строку до числа, потім числа додаються. Операнд 42 число, "hillel" строка. Виповнилась Конкатенація 
4. +'40' + +'2' + "hillel";
Результат: 42hillel

//Так як операнд '10'  строка, строка приводиться до числа. Потім виконується віднімання.  
5.'10' - 5 === 6;
Результат: false

// True привелось до значення 1, false до значення 0. Потім виконалась функція додавання
6. true + false;
Результат: 1

// Перший операнд typeof строка, але має цифру+ букви, тому не може переторитись на число. Операція віднімання не можлива
7.'4px' - 3;
Результат: NaN

// Так як операнд '4' строка, строка приводиться до числа. Потім виконується віднімання.
8.'4' - 3;
Результат: 1

// Спочатку призводимо до ступеню, число в ступінь 0 завжди буде 1. Так як оперед '6'строка, виконується конкатенація
9. '6' + 3 ** 0;
Результат: 61

// Операнд '6' строка, приводиться до числа. Далі виконується опереція поділу
10.12 / '6' ;
Результат: 2

// Спочатку виконується операція строгої рівності (прирівнюється 5 до 6).Так як вони не рівні, буде false. Далы виконуэ ться конкатенація строки '10' з булевим значенням 
11.'10' + (5 === 6);
Результат: 10false

// NULL object, '' пуста строка (типи різні). Виконується порівняння
12.null == ''
Результат: false

13.//Спочатку виконується операція ділення чисел. Потім результат приводиться в 3й ступінь
    3 ** (9 / 3);
Результат:27

14.// Порівнюються два значення на нерівність (оператор строга нерівність). 
 !!'false' == !!'true'
Результат: true

15.//Цикл перевірки "або" и "и". && опертор повертає значення останнього операнда, якщо обидва операнда true.Короткий цикл перевірки "або" - виходимо, як тільки знайшли хоч один true
0 || '0' && 1
Результат: 1

//Унарний плюс приводить до числа null. Потім виконується порівняння в дужках (0==false), буде true.True це 1. Далі виконується порівняння 1<1
16.(+null == false) < 1
Результат: false

17.//Цикл, де оператор && повертає false. Цей оператор повертає true тільки в тому випадку, якщо обидва його операнди істинні.Далі оператор ||"або" повертає true так як     достатньо, щоб хоча б один із операндів був істинним.
  false && true || true
Результат: true

18.// Спочатку виконується дія в дужках. Оператор "або" повертає true, так як один з оперендів істина. Далі оператор "і" повератає false, числення припиняються, як тільки знаходимо false
false && (false || true)
Результат: false


19.//Унарний + null приводить до числа 0.Потім прирівнює 0 до false (false приводиться до 0).Таким чином 0==0 це true (true приводиться до 1). Далі 1 призводиться до 5 ступені.Потім йде порівняння 1<1.
  (+null == false) < 1 ** 5
Результат:false

  
